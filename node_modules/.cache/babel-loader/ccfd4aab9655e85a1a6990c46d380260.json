{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ruben-Laptop\\\\Desktop\\\\mensa-app-gruppe-05\\\\client\\\\src\\\\components\\\\likeIcon function way.js\";\nimport React, { useState } from 'react';\nimport FavoriteBorderOutlinedIcon from '@material-ui/icons/FavoriteBorderOutlined';\nimport FavoriteOutlinedIcon from '@material-ui/icons/FavoriteOutlined';\nimport IconButton from '@material-ui/core/IconButton';\nimport Thedata from './FetchGerichte';\nimport useStyle from './UseStyles';\nexport default function LikeIcon(props) {\n  const [isDelete, setisDelete] = useState(true);\n  const [isAdded, setisAdded] = useState(false); //Fetch Lieblingsgerichte\n\n  const g = props.g;\n  const meineGerichte = Thedata(); //Fügt Lieblingsgerichte hinzu\n\n  const postGericht = async g => {\n    setisAdded(true); // POST request using fetch with async/await\n\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(g)\n    };\n    const response = await fetch('/mygericht', requestOptions);\n    const data = await response.json();\n    console.log(data);\n  }; //Löscht Lieblingsgericht\n\n\n  const deleteGericht = async g => {\n    setisDelete(false); // POST request using fetch with async/await\n\n    const tg = g;\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: \"\"\n    };\n    const response = await fetch('/mygericht/' + tg.id, requestOptions);\n    const data = await response.json();\n    console.log(data);\n  };\n\n  const isLiebling = () => {\n    var bool = [];\n\n    for (var i in meineGerichte) {\n      //console.log(meineGerichte[1].id + \" mm\")\n      if (g.id === meineGerichte[i].id) {\n        bool.push( /*#__PURE__*/React.createElement(FavoriteOutlinedIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 27\n          }\n        }));\n      } else {\n        bool.push( /*#__PURE__*/React.createElement(FavoriteBorderOutlinedIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 27\n          }\n        }));\n        bool.pop(0);\n      }\n    }\n\n    return bool;\n  };\n\n  const t = isLiebling();\n\n  if (meineGerichte == \"\" || t == \"\") {\n    if (!isAdded) {\n      return /*#__PURE__*/React.createElement(IconButton, {\n        key: \"tableModeButton\",\n        onClick: () => {\n          postGericht(g);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(FavoriteBorderOutlinedIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }\n      }));\n    } else {\n      return /*#__PURE__*/React.createElement(IconButton, {\n        onClick: () => {\n          deleteGericht(g);\n          window.location.reload();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(FavoriteOutlinedIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }\n      }));\n    }\n  } else {\n    if (isDelete) {\n      return /*#__PURE__*/React.createElement(IconButton, {\n        onClick: () => {\n          deleteGericht(g);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }\n      }, t);\n    } else {\n      return /*#__PURE__*/React.createElement(IconButton, {\n        key: \"tableModeButton\",\n        onClick: () => {\n          postGericht(g);\n          window.location.reload();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(FavoriteBorderOutlinedIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }\n      }));\n    }\n  } //  https://stackoverflow.com/questions/41852930/reactjs-how-to-change-an-icon-of-a-button-on-the-click-event\n\n  /* render() {\r\n      const g = this.props.g\r\n      const myLiebling = this.isLiebling(g);\r\n      /* console.log(this.state.readyLiebling[\"id\"] + \" testing\") */\n\n  /* if(this.state.isCardView){\r\n      postGericht(g)\r\n  } */\n\n  /* if(myLiebling){\r\n      return(\r\n          <IconButton key=\"tableModeButton\" >\r\n          <FavoriteBorderOutlinedIcon />\r\n      </IconButton>\r\n      )\r\n  }else{\r\n      return(\r\n          <IconButton key=\"tableModeButton\"\r\n          onClick={() => {\r\n              this.setState({\r\n                  gericht: g\r\n              })\r\n              this.setState({\r\n                  isCardView: !this.state.isCardView\r\n              })\r\n              if(!this.state.isCardView){\r\n                  postGericht(g)\r\n              }\r\n              \r\n              \r\n          }\r\n            } >\r\n          {this.state.isCardView ? <FavoriteOutlinedIcon /> : <FavoriteBorderOutlinedIcon />}\r\n      </IconButton>\r\n      )\r\n  } \r\n       */\n\n  /* return (\r\n      <IconButton key=\"tableModeButton\"\r\n          onClick={() => {\r\n              this.setState({\r\n                  gericht: g\r\n              })\r\n              this.setState({\r\n                  isCardView: !this.state.isCardView\r\n              })\r\n              if(!this.state.isCardView){\r\n                  postGericht(g)\r\n              }\r\n              \r\n              \r\n          }\r\n            } >\r\n          {this.state.isCardView ? <FavoriteOutlinedIcon /> : <FavoriteBorderOutlinedIcon />}\r\n      </IconButton>) */\n\n}","map":{"version":3,"sources":["C:/Users/Ruben-Laptop/Desktop/mensa-app-gruppe-05/client/src/components/likeIcon function way.js"],"names":["React","useState","FavoriteBorderOutlinedIcon","FavoriteOutlinedIcon","IconButton","Thedata","useStyle","LikeIcon","props","isDelete","setisDelete","isAdded","setisAdded","g","meineGerichte","postGericht","requestOptions","method","headers","body","JSON","stringify","response","fetch","data","json","console","log","deleteGericht","tg","id","isLiebling","bool","i","push","pop","t","window","location","reload"],"mappings":"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","sourcesContent":["import React, { useState} from 'react';\r\nimport FavoriteBorderOutlinedIcon from '@material-ui/icons/FavoriteBorderOutlined';\r\nimport FavoriteOutlinedIcon from '@material-ui/icons/FavoriteOutlined';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Thedata from './FetchGerichte';\r\nimport useStyle from './UseStyles'\r\n\r\n\r\nexport default function LikeIcon(props) {\r\n\r\n    const [isDelete, setisDelete] = useState(true);\r\n    const [isAdded, setisAdded] = useState(false);\r\n    //Fetch Lieblingsgerichte\r\n    const g = props.g\r\n    const meineGerichte = Thedata()\r\n\r\n    //Fügt Lieblingsgerichte hinzu\r\n    const postGericht = async (g) => {\r\n        setisAdded(true)\r\n        // POST request using fetch with async/await\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(g)\r\n        };\r\n        const response = await fetch('/mygericht', requestOptions);\r\n        const data = await response.json();\r\n        console.log(data)\r\n\r\n    }\r\n\r\n    //Löscht Lieblingsgericht\r\n    const deleteGericht = async (g) => {\r\n        setisDelete(false)\r\n        // POST request using fetch with async/await\r\n        const tg = g\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: \"\"\r\n        };\r\n        const response = await fetch('/mygericht/' + tg.id, requestOptions);\r\n        const data = await response.json();\r\n        console.log(data)\r\n    }\r\n\r\n    const isLiebling = () => {\r\n        var bool = [];\r\n\r\n        for (var i in meineGerichte) {\r\n\r\n            //console.log(meineGerichte[1].id + \" mm\")\r\n            if (g.id === meineGerichte[i].id) {\r\n                \r\n                bool.push(<FavoriteOutlinedIcon />);\r\n\r\n            } else {\r\n                bool.push(<FavoriteBorderOutlinedIcon />);\r\n                bool.pop(0)\r\n            }\r\n            \r\n\r\n        } return bool\r\n    }\r\n\r\n    const t = isLiebling();\r\n\r\n    if (meineGerichte == \"\" || t == \"\") {\r\n        if (!isAdded) {\r\n            return (\r\n                <IconButton key=\"tableModeButton\"\r\n                    onClick={() => { postGericht(g) }}\r\n                >\r\n                    <FavoriteBorderOutlinedIcon />\r\n                </IconButton>\r\n            )\r\n        } else{\r\n            return(\r\n                <IconButton onClick={() => { deleteGericht(g); window.location.reload() }}>\r\n                    <FavoriteOutlinedIcon/>\r\n                </IconButton>\r\n            )\r\n            \r\n        }\r\n    } else {\r\n        if (isDelete) {\r\n            return (\r\n                <IconButton onClick={() => { deleteGericht(g) }}>\r\n                    {t}\r\n                </IconButton>\r\n            )\r\n        } else {\r\n            return (\r\n                <IconButton key=\"tableModeButton\"\r\n                    onClick={() => { postGericht(g); window.location.reload() }}\r\n                >\r\n                    <FavoriteBorderOutlinedIcon />\r\n                </IconButton>)\r\n        }\r\n        \r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    //  https://stackoverflow.com/questions/41852930/reactjs-how-to-change-an-icon-of-a-button-on-the-click-event\r\n    /* render() {\r\n        const g = this.props.g\r\n        const myLiebling = this.isLiebling(g);\r\n        /* console.log(this.state.readyLiebling[\"id\"] + \" testing\") */\r\n    /* if(this.state.isCardView){\r\n        postGericht(g)\r\n    } */\r\n    /* if(myLiebling){\r\n        return(\r\n            <IconButton key=\"tableModeButton\" >\r\n            <FavoriteBorderOutlinedIcon />\r\n        </IconButton>\r\n        )\r\n    }else{\r\n        return(\r\n            <IconButton key=\"tableModeButton\"\r\n            onClick={() => {\r\n                this.setState({\r\n                    gericht: g\r\n                })\r\n                this.setState({\r\n                    isCardView: !this.state.isCardView\r\n                })\r\n                if(!this.state.isCardView){\r\n                    postGericht(g)\r\n                }\r\n                \r\n                \r\n            }\r\n\r\n            } >\r\n            {this.state.isCardView ? <FavoriteOutlinedIcon /> : <FavoriteBorderOutlinedIcon />}\r\n        </IconButton>\r\n        )\r\n    } \r\n         */\r\n\r\n    /* return (\r\n        <IconButton key=\"tableModeButton\"\r\n            onClick={() => {\r\n                this.setState({\r\n                    gericht: g\r\n                })\r\n                this.setState({\r\n                    isCardView: !this.state.isCardView\r\n                })\r\n                if(!this.state.isCardView){\r\n                    postGericht(g)\r\n                }\r\n                \r\n                \r\n            }\r\n\r\n            } >\r\n            {this.state.isCardView ? <FavoriteOutlinedIcon /> : <FavoriteBorderOutlinedIcon />}\r\n        </IconButton>) */\r\n}\r\n"]},"metadata":{},"sourceType":"module"}