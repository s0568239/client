{"ast":null,"code":"var _jsxFileName = \"D:\\\\Final_App_Repo\\\\mensa-app-gruppe-05\\\\client\\\\src\\\\components\\\\likeIcon function way.js\";\nimport React, { useState, useEffect } from 'react';\nimport FavoriteBorderOutlinedIcon from '@material-ui/icons/FavoriteBorderOutlined';\nimport FavoriteOutlinedIcon from '@material-ui/icons/FavoriteOutlined';\nimport IconButton from '@material-ui/core/IconButton';\nimport Thedata from './FetchLieblingsGerichte';\n\nconst postGericht = async g => {\n  // POST request using fetch with async/await\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(g)\n  };\n  const response = await fetch('/mygericht', requestOptions);\n  const data = await response.json();\n};\n\nexport default function LikeIcon(props) {\n  //Fetch Lieblingsgerichte\n  const meineGerichte = Thedata();\n  const g = props.g;\n\n  const isLiebling = () => {\n    //console.log(myLiebling[0].id)\n    var bool = false;\n\n    for (var i = 0; i < meineGerichte.length; i++) {\n      if (g.id == meineGerichte[i].id) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n    return bool;\n  };\n\n  return isLiebling() ? /*#__PURE__*/React.createElement(IconButton, {\n    onClick: console.log(\"test\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 26\n    }\n  }, /*#__PURE__*/React.createElement(FavoriteOutlinedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 68\n    }\n  })) : /*#__PURE__*/React.createElement(IconButton, {\n    onClick: console.log(\"sad\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 107\n    }\n  }, /*#__PURE__*/React.createElement(FavoriteBorderOutlinedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 148\n    }\n  })); //  https://stackoverflow.com/questions/41852930/reactjs-how-to-change-an-icon-of-a-button-on-the-click-event\n\n  /* render() {\r\n      const g = this.props.g\r\n      const myLiebling = this.isLiebling(g);\r\n      /* console.log(this.state.readyLiebling[\"id\"] + \" testing\") */\n\n  /* if(this.state.isCardView){\r\n      postGericht(g)\r\n  } */\n\n  /* if(myLiebling){\r\n      return(\r\n          <IconButton key=\"tableModeButton\" >\r\n          <FavoriteBorderOutlinedIcon />\r\n      </IconButton>\r\n      )\r\n  }else{\r\n      return(\r\n          <IconButton key=\"tableModeButton\"\r\n          onClick={() => {\r\n              this.setState({\r\n                  gericht: g\r\n              })\r\n              this.setState({\r\n                  isCardView: !this.state.isCardView\r\n              })\r\n              if(!this.state.isCardView){\r\n                  postGericht(g)\r\n              }\r\n              \r\n              \r\n          }\r\n            } >\r\n          {this.state.isCardView ? <FavoriteOutlinedIcon /> : <FavoriteBorderOutlinedIcon />}\r\n      </IconButton>\r\n      )\r\n  } \r\n       */\n\n  /* return (\r\n      <IconButton key=\"tableModeButton\"\r\n          onClick={() => {\r\n              this.setState({\r\n                  gericht: g\r\n              })\r\n              this.setState({\r\n                  isCardView: !this.state.isCardView\r\n              })\r\n              if(!this.state.isCardView){\r\n                  postGericht(g)\r\n              }\r\n              \r\n              \r\n          }\r\n            } >\r\n          {this.state.isCardView ? <FavoriteOutlinedIcon /> : <FavoriteBorderOutlinedIcon />}\r\n      </IconButton>) */\n}","map":{"version":3,"sources":["D:/Final_App_Repo/mensa-app-gruppe-05/client/src/components/likeIcon function way.js"],"names":["React","useState","useEffect","FavoriteBorderOutlinedIcon","FavoriteOutlinedIcon","IconButton","Thedata","postGericht","g","requestOptions","method","headers","body","JSON","stringify","response","fetch","data","json","LikeIcon","props","meineGerichte","isLiebling","bool","i","length","id","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,0BAAP,MAAuC,2CAAvC;AACA,OAAOC,oBAAP,MAAiC,qCAAjC;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,OAAP,MAAoB,0BAApB;;AAEA,MAAMC,WAAW,GAAG,MAAOC,CAAP,IAAa;AAC7B;AACA,QAAMC,cAAc,GAAG;AACnBC,IAAAA,MAAM,EAAE,MADW;AAEnBC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAFU;AAGnBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,CAAf;AAHa,GAAvB;AAKA,QAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAD,EAAeP,cAAf,CAA5B;AACA,QAAMQ,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AAEH,CAVD;;AAYA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACpC;AACA,QAAMC,aAAa,GAAGf,OAAO,EAA7B;AACA,QAAME,CAAC,GAAGY,KAAK,CAACZ,CAAhB;;AAEA,QAAMc,UAAU,GAAG,MAAM;AAGrB;AACA,QAAIC,IAAI,GAAG,KAAX;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,aAAa,CAACI,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;AAE3C,UAAIhB,CAAC,CAACkB,EAAF,IAAQL,aAAa,CAACG,CAAD,CAAb,CAAiBE,EAA7B,EAAiC;AAE7B,eAAO,IAAP;AAGH,OALD,MAKO;AACH,eAAO,KAAP;AAEH;AAEJ;;AACD,WAAOH,IAAP;AACH,GAnBD;;AAoBA,SACKD,UAAU,EAAX,gBAAiB,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAEK,OAAO,CAACC,GAAR,CAAY,MAAZ,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA0C,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA1C,CAAjB,gBAAkG,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAED,OAAO,CAACC,GAAR,CAAY,KAAZ,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAyC,oBAAC,0BAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAzC,CADtG,CAzBoC,CA6BpC;;AACA;;;;;AAIA;;;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;;;;;;;;;;;;;;;;;;AAmBH","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport FavoriteBorderOutlinedIcon from '@material-ui/icons/FavoriteBorderOutlined';\r\nimport FavoriteOutlinedIcon from '@material-ui/icons/FavoriteOutlined';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Thedata from './FetchLieblingsGerichte'\r\n\r\nconst postGericht = async (g) => {\r\n    // POST request using fetch with async/await\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(g)\r\n    };\r\n    const response = await fetch('/mygericht', requestOptions);\r\n    const data = await response.json();\r\n\r\n}\r\n\r\nexport default function LikeIcon(props) {\r\n    //Fetch Lieblingsgerichte\r\n    const meineGerichte = Thedata();\r\n    const g = props.g\r\n\r\n    const isLiebling = () => {\r\n\r\n\r\n        //console.log(myLiebling[0].id)\r\n        var bool = false\r\n        for (var i = 0; i < meineGerichte.length; i++) {\r\n\r\n            if (g.id == meineGerichte[i].id) {\r\n\r\n                return true \r\n\r\n\r\n            } else {\r\n                return false\r\n\r\n            }\r\n\r\n        }\r\n        return bool;\r\n    }\r\n    return(\r\n        (isLiebling()) ? <IconButton onClick={console.log(\"test\")}><FavoriteOutlinedIcon/></IconButton> : <IconButton onClick={console.log(\"sad\")}><FavoriteBorderOutlinedIcon/></IconButton>\r\n    )\r\n\r\n    //  https://stackoverflow.com/questions/41852930/reactjs-how-to-change-an-icon-of-a-button-on-the-click-event\r\n    /* render() {\r\n        const g = this.props.g\r\n        const myLiebling = this.isLiebling(g);\r\n        /* console.log(this.state.readyLiebling[\"id\"] + \" testing\") */\r\n    /* if(this.state.isCardView){\r\n        postGericht(g)\r\n    } */\r\n    /* if(myLiebling){\r\n        return(\r\n            <IconButton key=\"tableModeButton\" >\r\n            <FavoriteBorderOutlinedIcon />\r\n        </IconButton>\r\n        )\r\n    }else{\r\n        return(\r\n            <IconButton key=\"tableModeButton\"\r\n            onClick={() => {\r\n                this.setState({\r\n                    gericht: g\r\n                })\r\n                this.setState({\r\n                    isCardView: !this.state.isCardView\r\n                })\r\n                if(!this.state.isCardView){\r\n                    postGericht(g)\r\n                }\r\n                \r\n                \r\n            }\r\n\r\n            } >\r\n            {this.state.isCardView ? <FavoriteOutlinedIcon /> : <FavoriteBorderOutlinedIcon />}\r\n        </IconButton>\r\n        )\r\n    } \r\n         */\r\n\r\n    /* return (\r\n        <IconButton key=\"tableModeButton\"\r\n            onClick={() => {\r\n                this.setState({\r\n                    gericht: g\r\n                })\r\n                this.setState({\r\n                    isCardView: !this.state.isCardView\r\n                })\r\n                if(!this.state.isCardView){\r\n                    postGericht(g)\r\n                }\r\n                \r\n                \r\n            }\r\n\r\n            } >\r\n            {this.state.isCardView ? <FavoriteOutlinedIcon /> : <FavoriteBorderOutlinedIcon />}\r\n        </IconButton>) */\r\n}\r\n"]},"metadata":{},"sourceType":"module"}