{"ast":null,"code":"var _jsxFileName = \"D:\\\\Final_App_Repo\\\\mensa-app-gruppe-05\\\\client\\\\src\\\\components\\\\likeIcon function way.js\";\nimport React, { useState, useEffect } from 'react';\nimport FavoriteBorderOutlinedIcon from '@material-ui/icons/FavoriteBorderOutlined';\nimport FavoriteOutlinedIcon from '@material-ui/icons/FavoriteOutlined';\nimport IconButton from '@material-ui/core/IconButton';\nimport Thedata from './FetchLieblingsGerichte';\nimport { colors } from '@material-ui/core';\n\nconst postGericht = async g => {\n  // POST request using fetch with async/await\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(g)\n  };\n  const response = await fetch('/mygericht', requestOptions);\n  const data = await response.json();\n};\n\nconst deleteGericht = async g => {\n  // POST request using fetch with async/await\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(g)\n  };\n  const response = await fetch('/mygericht' + g.id, requestOptions);\n  const data = await response.json();\n};\n\nexport default function LikeIcon(props) {\n  //Fetch Lieblingsgerichte\n  const Thedata = () => {\n    const [readyLiebling, setreadyLiebling] = useState([]);\n    useEffect(() => {\n      const loadData = async () => {\n        const response = await fetch('/mygericht/');\n        const data = await response.json(); //console.log(data)\n\n        setreadyLiebling(data); //console.log(this.state.readyLiebling[2].id + \" testing\")\n      };\n\n      loadData('/mygericht/');\n    }, []);\n    return readyLiebling;\n  };\n\n  const g = props.g;\n  const meineGerichte = Thedata();\n\n  const isLiebling = () => {\n    var bool = [];\n    var bool2 = [];\n\n    for (var i in meineGerichte) {\n      //console.log(meineGerichte[1].id + \" mm\")\n      if (g.id == meineGerichte[i].id) {\n        console.log(meineGerichte[i].id);\n        bool.push( /*#__PURE__*/React.createElement(FavoriteOutlinedIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 28\n          }\n        }));\n      } else {\n        bool.push( /*#__PURE__*/React.createElement(FavoriteBorderOutlinedIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 27\n          }\n        }));\n        bool.pop(0);\n      }\n\n      console.log(bool2[i]);\n    }\n\n    return bool;\n  };\n\n  const t = isLiebling();\n\n  if (meineGerichte == \"\" || t == \"\") {\n    return /*#__PURE__*/React.createElement(IconButton, {\n      key: \"tableModeButton\",\n      onClick: () => {\n        postGericht(g);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FavoriteBorderOutlinedIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }));\n  } else {\n    const b = isLiebling();\n    return /*#__PURE__*/React.createElement(IconButton, {\n      onClick: () => {\n        console.log(\"hmm\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, t);\n  } //  https://stackoverflow.com/questions/41852930/reactjs-how-to-change-an-icon-of-a-button-on-the-click-event\n\n  /* render() {\r\n      const g = this.props.g\r\n      const myLiebling = this.isLiebling(g);\r\n      /* console.log(this.state.readyLiebling[\"id\"] + \" testing\") */\n\n  /* if(this.state.isCardView){\r\n      postGericht(g)\r\n  } */\n\n  /* if(myLiebling){\r\n      return(\r\n          <IconButton key=\"tableModeButton\" >\r\n          <FavoriteBorderOutlinedIcon />\r\n      </IconButton>\r\n      )\r\n  }else{\r\n      return(\r\n          <IconButton key=\"tableModeButton\"\r\n          onClick={() => {\r\n              this.setState({\r\n                  gericht: g\r\n              })\r\n              this.setState({\r\n                  isCardView: !this.state.isCardView\r\n              })\r\n              if(!this.state.isCardView){\r\n                  postGericht(g)\r\n              }\r\n              \r\n              \r\n          }\r\n            } >\r\n          {this.state.isCardView ? <FavoriteOutlinedIcon /> : <FavoriteBorderOutlinedIcon />}\r\n      </IconButton>\r\n      )\r\n  } \r\n       */\n\n  /* return (\r\n      <IconButton key=\"tableModeButton\"\r\n          onClick={() => {\r\n              this.setState({\r\n                  gericht: g\r\n              })\r\n              this.setState({\r\n                  isCardView: !this.state.isCardView\r\n              })\r\n              if(!this.state.isCardView){\r\n                  postGericht(g)\r\n              }\r\n              \r\n              \r\n          }\r\n            } >\r\n          {this.state.isCardView ? <FavoriteOutlinedIcon /> : <FavoriteBorderOutlinedIcon />}\r\n      </IconButton>) */\n\n}","map":{"version":3,"sources":["D:/Final_App_Repo/mensa-app-gruppe-05/client/src/components/likeIcon function way.js"],"names":["React","useState","useEffect","FavoriteBorderOutlinedIcon","FavoriteOutlinedIcon","IconButton","Thedata","colors","postGericht","g","requestOptions","method","headers","body","JSON","stringify","response","fetch","data","json","deleteGericht","id","LikeIcon","props","readyLiebling","setreadyLiebling","loadData","meineGerichte","isLiebling","bool","bool2","i","console","log","push","pop","t","b"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport FavoriteBorderOutlinedIcon from '@material-ui/icons/FavoriteBorderOutlined';\r\nimport FavoriteOutlinedIcon from '@material-ui/icons/FavoriteOutlined';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Thedata from './FetchLieblingsGerichte'\r\nimport { colors } from '@material-ui/core';\r\n\r\nconst postGericht = async (g) => {\r\n    // POST request using fetch with async/await\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(g)\r\n    };\r\n    const response = await fetch('/mygericht', requestOptions);\r\n    const data = await response.json();\r\n\r\n}\r\n\r\nconst deleteGericht = async (g) => {\r\n    // POST request using fetch with async/await\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(g)\r\n    };\r\n    const response = await fetch('/mygericht' + g.id, requestOptions);\r\n    const data = await response.json();\r\n\r\n}\r\n\r\n\r\nexport default function LikeIcon(props) {\r\n    //Fetch Lieblingsgerichte\r\n    const Thedata = () => {\r\n        const [readyLiebling, setreadyLiebling] = useState([]);\r\n        useEffect(() => {\r\n            const loadData = async () => {\r\n                const response = await fetch('/mygericht/')\r\n                const data = await response.json()\r\n                //console.log(data)\r\n                setreadyLiebling(data)\r\n                //console.log(this.state.readyLiebling[2].id + \" testing\")\r\n            };\r\n            loadData('/mygericht/')\r\n\r\n        }, []);\r\n        return readyLiebling\r\n    }\r\n\r\n    const g = props.g\r\n    const meineGerichte = Thedata()\r\n\r\n\r\n\r\n    const isLiebling = () => {\r\n        var bool = [];\r\n        var bool2 = []\r\n        for (var i in meineGerichte) {\r\n\r\n            //console.log(meineGerichte[1].id + \" mm\")\r\n            if (g.id == meineGerichte[i].id) {\r\n                console.log(meineGerichte[i].id)\r\n                bool.push (<FavoriteOutlinedIcon />);\r\n\r\n            } else {\r\n                bool.push(<FavoriteBorderOutlinedIcon />);\r\n                bool.pop(0)\r\n            }\r\n            console.log(bool2[i])\r\n\r\n        } return bool\r\n    }\r\n\r\n    const t = isLiebling();\r\n\r\n    if (meineGerichte == \"\" || t == \"\") {\r\n        return (\r\n            <IconButton key=\"tableModeButton\"\r\n                onClick={() => { postGericht(g) }}\r\n            >\r\n                <FavoriteBorderOutlinedIcon />\r\n            </IconButton>\r\n        )\r\n    } else {\r\n        const b = isLiebling()\r\n        return (\r\n            <IconButton onClick={() => { console.log(\"hmm\") }}>\r\n                {t}\r\n            </IconButton>\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    //  https://stackoverflow.com/questions/41852930/reactjs-how-to-change-an-icon-of-a-button-on-the-click-event\r\n    /* render() {\r\n        const g = this.props.g\r\n        const myLiebling = this.isLiebling(g);\r\n        /* console.log(this.state.readyLiebling[\"id\"] + \" testing\") */\r\n    /* if(this.state.isCardView){\r\n        postGericht(g)\r\n    } */\r\n    /* if(myLiebling){\r\n        return(\r\n            <IconButton key=\"tableModeButton\" >\r\n            <FavoriteBorderOutlinedIcon />\r\n        </IconButton>\r\n        )\r\n    }else{\r\n        return(\r\n            <IconButton key=\"tableModeButton\"\r\n            onClick={() => {\r\n                this.setState({\r\n                    gericht: g\r\n                })\r\n                this.setState({\r\n                    isCardView: !this.state.isCardView\r\n                })\r\n                if(!this.state.isCardView){\r\n                    postGericht(g)\r\n                }\r\n                \r\n                \r\n            }\r\n\r\n            } >\r\n            {this.state.isCardView ? <FavoriteOutlinedIcon /> : <FavoriteBorderOutlinedIcon />}\r\n        </IconButton>\r\n        )\r\n    } \r\n         */\r\n\r\n    /* return (\r\n        <IconButton key=\"tableModeButton\"\r\n            onClick={() => {\r\n                this.setState({\r\n                    gericht: g\r\n                })\r\n                this.setState({\r\n                    isCardView: !this.state.isCardView\r\n                })\r\n                if(!this.state.isCardView){\r\n                    postGericht(g)\r\n                }\r\n                \r\n                \r\n            }\r\n\r\n            } >\r\n            {this.state.isCardView ? <FavoriteOutlinedIcon /> : <FavoriteBorderOutlinedIcon />}\r\n        </IconButton>) */\r\n}\r\n"]},"metadata":{},"sourceType":"module"}