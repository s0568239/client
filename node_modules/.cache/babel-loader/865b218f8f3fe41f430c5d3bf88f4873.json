{"ast":null,"code":"var _jsxFileName = \"D:\\\\Final_App_Repo\\\\mensa-app-gruppe-05\\\\client\\\\src\\\\components\\\\likeIcon function way.js\";\nimport React, { useState, useEffect } from 'react';\nimport FavoriteBorderOutlinedIcon from '@material-ui/icons/FavoriteBorderOutlined';\nimport FavoriteOutlinedIcon from '@material-ui/icons/FavoriteOutlined';\nimport IconButton from '@material-ui/core/IconButton';\nimport Thedata from './FetchLieblingsGerichte';\nexport default function LikeIcon(props) {\n  const [isCardView, setisCardView] = useState(false);\n  const [gericht, setgericht] = useState(NaN); //Fetch Lieblingsgerichte\n\n  const meineGerichte = Thedata();\n  console.log(meineGerichte);\n\n  const postGericht = async g => {\n    // POST request using fetch with async/await\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(g)\n    };\n    const response = await fetch('/mygericht', requestOptions);\n    const data = await response.json();\n    console.log(data);\n  };\n\n  const isLiebling = () => {\n    const g = props.g; //console.log(myLiebling[0].id)\n\n    var bool = \"\";\n\n    for (var i = 0; i < meineGerichte.length; i++) {\n      if (g.id == meineGerichte[i].id) {\n        return /*#__PURE__*/React.createElement(FavoriteOutlinedIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 24\n          }\n        });\n      } else {\n        return /*#__PURE__*/React.createElement(FavoriteBorderOutlinedIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 24\n          }\n        });\n      }\n    }\n\n    return bool;\n  };\n\n  return isLiebling(props.g); //  https://stackoverflow.com/questions/41852930/reactjs-how-to-change-an-icon-of-a-button-on-the-click-event\n\n  /* render() {\r\n      const g = this.props.g\r\n      const myLiebling = this.isLiebling(g);\r\n      /* console.log(this.state.readyLiebling[\"id\"] + \" testing\") */\n\n  /* if(this.state.isCardView){\r\n      postGericht(g)\r\n  } */\n\n  /* if(myLiebling){\r\n      return(\r\n          <IconButton key=\"tableModeButton\" >\r\n          <FavoriteBorderOutlinedIcon />\r\n      </IconButton>\r\n      )\r\n  }else{\r\n      return(\r\n          <IconButton key=\"tableModeButton\"\r\n          onClick={() => {\r\n              this.setState({\r\n                  gericht: g\r\n              })\r\n              this.setState({\r\n                  isCardView: !this.state.isCardView\r\n              })\r\n              if(!this.state.isCardView){\r\n                  postGericht(g)\r\n              }\r\n              \r\n              \r\n          }\r\n            } >\r\n          {this.state.isCardView ? <FavoriteOutlinedIcon /> : <FavoriteBorderOutlinedIcon />}\r\n      </IconButton>\r\n      )\r\n  } \r\n       */\n\n  /* return (\r\n      <IconButton key=\"tableModeButton\"\r\n          onClick={() => {\r\n              this.setState({\r\n                  gericht: g\r\n              })\r\n              this.setState({\r\n                  isCardView: !this.state.isCardView\r\n              })\r\n              if(!this.state.isCardView){\r\n                  postGericht(g)\r\n              }\r\n              \r\n              \r\n          }\r\n            } >\r\n          {this.state.isCardView ? <FavoriteOutlinedIcon /> : <FavoriteBorderOutlinedIcon />}\r\n      </IconButton>) */\n}","map":{"version":3,"sources":["D:/Final_App_Repo/mensa-app-gruppe-05/client/src/components/likeIcon function way.js"],"names":["React","useState","useEffect","FavoriteBorderOutlinedIcon","FavoriteOutlinedIcon","IconButton","Thedata","LikeIcon","props","isCardView","setisCardView","gericht","setgericht","NaN","meineGerichte","console","log","postGericht","g","requestOptions","method","headers","body","JSON","stringify","response","fetch","data","json","isLiebling","bool","i","length","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,0BAAP,MAAuC,2CAAvC;AACA,OAAOC,oBAAP,MAAiC,qCAAjC;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAEpC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAACY,GAAD,CAAtC,CAHoC,CAMpC;;AACA,QAAMC,aAAa,GAAGR,OAAO,EAA7B;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAYF,aAAZ;;AAEA,QAAMG,WAAW,GAAG,MAAOC,CAAP,IAAa;AAC7B;AACA,UAAMC,cAAc,GAAG;AACnBC,MAAAA,MAAM,EAAE,MADW;AAEnBC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFU;AAGnBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,CAAf;AAHa,KAAvB;AAKA,UAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAD,EAAeP,cAAf,CAA5B;AACA,UAAMQ,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAb,IAAAA,OAAO,CAACC,GAAR,CAAYW,IAAZ;AACH,GAVD;;AAYA,QAAME,UAAU,GAAG,MAAM;AACrB,UAAMX,CAAC,GAAGV,KAAK,CAACU,CAAhB,CADqB,CAGrB;;AACA,QAAIY,IAAI,GAAG,EAAX;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGjB,aAAa,CAACkB,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;AAE3C,UAAIb,CAAC,CAACe,EAAF,IAAQnB,aAAa,CAACiB,CAAD,CAAb,CAAiBE,EAA7B,EAAiC;AAC7B,4BAAO,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAGH,OAJD,MAIO;AACH,4BAAO,oBAAC,0BAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEH;AAEJ;;AACD,WAAOH,IAAP;AACH,GAlBD;;AAoBA,SAEID,UAAU,CAACrB,KAAK,CAACU,CAAP,CAFd,CA1CoC,CAgDpC;;AACA;;;;;AAIA;;;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;;;;;;;;;;;;;;;;;;AAmBH","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport FavoriteBorderOutlinedIcon from '@material-ui/icons/FavoriteBorderOutlined';\r\nimport FavoriteOutlinedIcon from '@material-ui/icons/FavoriteOutlined';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Thedata from './FetchLieblingsGerichte'\r\n\r\nexport default function LikeIcon(props) {\r\n\r\n    const [isCardView, setisCardView] = useState(false);\r\n    const [gericht, setgericht] = useState(NaN);\r\n\r\n\r\n    //Fetch Lieblingsgerichte\r\n    const meineGerichte = Thedata();\r\n    console.log(meineGerichte)\r\n\r\n    const postGericht = async (g) => {\r\n        // POST request using fetch with async/await\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(g)\r\n        };\r\n        const response = await fetch('/mygericht', requestOptions);\r\n        const data = await response.json();\r\n        console.log(data)\r\n    }\r\n\r\n    const isLiebling = () => {\r\n        const g = props.g\r\n        \r\n        //console.log(myLiebling[0].id)\r\n        var bool = \"\"\r\n        for (var i = 0; i < meineGerichte.length; i++) {\r\n\r\n            if (g.id == meineGerichte[i].id) {\r\n                return <FavoriteOutlinedIcon />\r\n\r\n\r\n            } else {\r\n                return <FavoriteBorderOutlinedIcon />\r\n\r\n            }\r\n\r\n        }\r\n        return bool;\r\n    }\r\n\r\n    return (\r\n\r\n        isLiebling(props.g)\r\n\r\n    )\r\n\r\n    //  https://stackoverflow.com/questions/41852930/reactjs-how-to-change-an-icon-of-a-button-on-the-click-event\r\n    /* render() {\r\n        const g = this.props.g\r\n        const myLiebling = this.isLiebling(g);\r\n        /* console.log(this.state.readyLiebling[\"id\"] + \" testing\") */\r\n    /* if(this.state.isCardView){\r\n        postGericht(g)\r\n    } */\r\n    /* if(myLiebling){\r\n        return(\r\n            <IconButton key=\"tableModeButton\" >\r\n            <FavoriteBorderOutlinedIcon />\r\n        </IconButton>\r\n        )\r\n    }else{\r\n        return(\r\n            <IconButton key=\"tableModeButton\"\r\n            onClick={() => {\r\n                this.setState({\r\n                    gericht: g\r\n                })\r\n                this.setState({\r\n                    isCardView: !this.state.isCardView\r\n                })\r\n                if(!this.state.isCardView){\r\n                    postGericht(g)\r\n                }\r\n                \r\n                \r\n            }\r\n\r\n            } >\r\n            {this.state.isCardView ? <FavoriteOutlinedIcon /> : <FavoriteBorderOutlinedIcon />}\r\n        </IconButton>\r\n        )\r\n    } \r\n         */\r\n\r\n    /* return (\r\n        <IconButton key=\"tableModeButton\"\r\n            onClick={() => {\r\n                this.setState({\r\n                    gericht: g\r\n                })\r\n                this.setState({\r\n                    isCardView: !this.state.isCardView\r\n                })\r\n                if(!this.state.isCardView){\r\n                    postGericht(g)\r\n                }\r\n                \r\n                \r\n            }\r\n\r\n            } >\r\n            {this.state.isCardView ? <FavoriteOutlinedIcon /> : <FavoriteBorderOutlinedIcon />}\r\n        </IconButton>) */\r\n}\r\n"]},"metadata":{},"sourceType":"module"}