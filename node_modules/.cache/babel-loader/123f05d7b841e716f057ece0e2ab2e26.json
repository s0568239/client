{"ast":null,"code":"var _jsxFileName = \"D:\\\\Final_App_Repo\\\\mensa-app-gruppe-05\\\\client\\\\src\\\\components\\\\likeIcon.js\";\nimport React from 'react';\nimport FavoriteBorderOutlinedIcon from '@material-ui/icons/FavoriteBorderOutlined';\nimport FavoriteOutlinedIcon from '@material-ui/icons/FavoriteOutlined';\nimport IconButton from '@material-ui/core/IconButton';\n\nconst postGericht = async g => {\n  // POST request using fetch with async/await\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(g)\n  };\n  const response = await fetch('/mygericht', requestOptions);\n  const data = await response.json();\n  console.log(data);\n};\n\nclass LikeIcon extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isCardView: false,\n      gericht: NaN,\n      readyLiebling: []\n    };\n  } //Fetch Lieblingsgerichte\n\n\n  async componentDidMount() {\n    const response = await fetch('/mygericht/');\n    const data = await response.json();\n    this.setState({\n      readyLiebling: data\n    }); //console.log(this.state.readyLiebling[2].id + \" testing\")\n  }\n\n  isLiebling(g) {\n    console.log(this.state.readyLiebling[0].id);\n\n    for (var x in this.state.readyLiebling) {\n      if (g.id === myLiebling[x].id) {\n        console.log(\"this is g: \" + g.id);\n        console.log(\"this is myL: \" + myLiebling[x].id);\n        return true;\n      } else {\n        console.log(\"buuuu\");\n        return false;\n      }\n    }\n  } //  https://stackoverflow.com/questions/41852930/reactjs-how-to-change-an-icon-of-a-button-on-the-click-event\n\n\n  render() {\n    const g = this.props.g;\n    const myLiebling = this.isLiebling(g);\n    /* console.log(this.state.readyLiebling[\"id\"] + \" testing\") */\n\n    /* if(this.state.isCardView){\r\n        postGericht(g)\r\n    } */\n\n    return /*#__PURE__*/React.createElement(IconButton, {\n      key: \"tableModeButton\",\n      onClick: () => {\n        this.setState({\n          gericht: g\n        });\n        this.setState({\n          isCardView: !this.state.isCardView\n        });\n\n        if (!this.state.isCardView) {\n          postGericht(g);\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, this.state.isCardView ? /*#__PURE__*/React.createElement(FavoriteOutlinedIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 42\n      }\n    }) : /*#__PURE__*/React.createElement(FavoriteBorderOutlinedIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 69\n      }\n    }));\n  }\n\n}\n\nexport default LikeIcon;","map":{"version":3,"sources":["D:/Final_App_Repo/mensa-app-gruppe-05/client/src/components/likeIcon.js"],"names":["React","FavoriteBorderOutlinedIcon","FavoriteOutlinedIcon","IconButton","postGericht","g","requestOptions","method","headers","body","JSON","stringify","response","fetch","data","json","console","log","LikeIcon","Component","constructor","props","state","isCardView","gericht","NaN","readyLiebling","componentDidMount","setState","isLiebling","id","x","myLiebling","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport FavoriteBorderOutlinedIcon from '@material-ui/icons/FavoriteBorderOutlined';\r\nimport FavoriteOutlinedIcon from '@material-ui/icons/FavoriteOutlined';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nconst postGericht = async (g) => {\r\n    // POST request using fetch with async/await\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(g)\r\n    };\r\n    const response = await fetch('/mygericht', requestOptions);\r\n    const data = await response.json();\r\n    console.log(data)\r\n}\r\n\r\nclass LikeIcon extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isCardView: false,\r\n            gericht: NaN,\r\n            readyLiebling: []\r\n        };\r\n\r\n    }\r\n\r\n    //Fetch Lieblingsgerichte\r\n    async componentDidMount(){\r\n        const response = await fetch('/mygericht/')\r\n        const data = await response.json()\r\n        this.setState({readyLiebling: data})\r\n        //console.log(this.state.readyLiebling[2].id + \" testing\")\r\n        \r\n    }\r\n\r\n    isLiebling(g){\r\n        \r\n        console.log(this.state.readyLiebling[0].id)\r\n        for(var x in this.state.readyLiebling){\r\n            if(g.id === myLiebling[x].id){\r\n                console.log(\"this is g: \" + g.id)\r\n                console.log(\"this is myL: \" + myLiebling[x].id)\r\n                return true\r\n            }\r\n            else{\r\n                console.log(\"buuuu\")\r\n                return false\r\n            }\r\n        }\r\n    }\r\n\r\n    //  https://stackoverflow.com/questions/41852930/reactjs-how-to-change-an-icon-of-a-button-on-the-click-event\r\n    render() {\r\n        const g = this.props.g\r\n        const myLiebling = this.isLiebling(g);\r\n        /* console.log(this.state.readyLiebling[\"id\"] + \" testing\") */\r\n        /* if(this.state.isCardView){\r\n            postGericht(g)\r\n        } */\r\n        \r\n        \r\n        return (\r\n            <IconButton key=\"tableModeButton\"\r\n                onClick={() => {\r\n                    this.setState({\r\n                        gericht: g\r\n                    })\r\n                    this.setState({\r\n                        isCardView: !this.state.isCardView\r\n                    })\r\n                    if(!this.state.isCardView){\r\n                        postGericht(g)\r\n                    }\r\n                    \r\n                    \r\n                }\r\n\r\n                } >\r\n                {this.state.isCardView ? <FavoriteOutlinedIcon /> : <FavoriteBorderOutlinedIcon />}\r\n            </IconButton>)\r\n    }\r\n}\r\nexport default LikeIcon"]},"metadata":{},"sourceType":"module"}