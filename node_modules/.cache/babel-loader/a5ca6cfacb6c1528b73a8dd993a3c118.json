{"ast":null,"code":"var _jsxFileName = \"D:\\\\Final_App_Repo\\\\mensa-app-gruppe-05\\\\client\\\\src\\\\components\\\\timeHome.js\";\nimport React, { Component } from 'react';\n\nclass TimeHome extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: [],\n      mymensa: \"\",\n      isLoaded: false\n    };\n  }\n\n  formatDate(date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n    if (month.length < 2) month = '0' + month;\n    if (day.length < 2) day = '0' + day;\n    return [year, month, day].join('-');\n  }\n\n  componentWillMount() {\n    this.setState({\n      isLoaded: true\n    });\n    var url = 'https://openmensa.org/api/v2/canteens/${canteen_id}/days/{day_date}'; //https://stackoverflow.com/questions/40981040/using-a-fetch-inside-another-fetch-in-javascript\n\n    var result = fetch('/mymensa', {\n      method: 'get'\n    }).then(function (response) {\n      return response.json(); // pass the data as promise to next then block\n    }).then(function (data) {\n      var canteen_id = data.id;\n      var date = new Date();\n      var day_date = formatDate(date);\n      console.log(canteen_id, '\\n' + day_date);\n      return fetch(url); // make a 2nd request and return a promise\n    }).then(function (response) {\n      return response.json();\n    }).catch(function (error) {\n      console.log('Request failed', error);\n    });\n    result.then(function (r) {\n      console.log(r);\n    });\n  }\n\n  render() {\n    const {\n      date,\n      isLoaded\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, isLoaded ? date.map(titel => {\n      const {\n        date\n      } = titel;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 37\n        }\n      }, date));\n    }) : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 29\n      }\n    }, \"no test\"));\n  }\n\n}\n\nexport default TimeHome;","map":{"version":3,"sources":["D:/Final_App_Repo/mensa-app-gruppe-05/client/src/components/timeHome.js"],"names":["React","Component","TimeHome","constructor","props","state","date","mymensa","isLoaded","formatDate","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","componentWillMount","setState","url","result","fetch","method","then","response","json","data","canteen_id","id","day_date","console","log","catch","error","r","render","map","titel"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,QAAN,SAAuBD,SAAvB,CAAiC;AAC7BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,EADG;AAETC,MAAAA,OAAO,EAAE,EAFA;AAGTC,MAAAA,QAAQ,EAAE;AAHD,KAAb;AAKH;;AAEDC,EAAAA,UAAU,CAACH,IAAD,EAAO;AACb,QAAII,CAAC,GAAG,IAAIC,IAAJ,CAASL,IAAT,CAAR;AAAA,QACIM,KAAK,GAAG,MAAMF,CAAC,CAACG,QAAF,KAAe,CAArB,CADZ;AAAA,QAEIC,GAAG,GAAG,KAAKJ,CAAC,CAACK,OAAF,EAFf;AAAA,QAGIC,IAAI,GAAGN,CAAC,CAACO,WAAF,EAHX;AAKA,QAAIL,KAAK,CAACM,MAAN,GAAe,CAAnB,EACIN,KAAK,GAAG,MAAMA,KAAd;AACJ,QAAIE,GAAG,CAACI,MAAJ,GAAa,CAAjB,EACIJ,GAAG,GAAG,MAAMA,GAAZ;AAEJ,WAAO,CAACE,IAAD,EAAOJ,KAAP,EAAcE,GAAd,EAAmBK,IAAnB,CAAwB,GAAxB,CAAP;AACH;;AAEDC,EAAAA,kBAAkB,GAAG;AACjB,SAAKC,QAAL,CAAc;AAAEb,MAAAA,QAAQ,EAAE;AAAZ,KAAd;AACA,QAAIc,GAAG,GAAG,qEAAV,CAFiB,CAGjB;;AACA,QAAIC,MAAM,GAAGC,KAAK,CAAC,UAAD,EAAa;AAC3BC,MAAAA,MAAM,EAAE;AADmB,KAAb,CAAL,CAERC,IAFQ,CAEH,UAASC,QAAT,EAAmB;AACzB,aAAOA,QAAQ,CAACC,IAAT,EAAP,CADyB,CACD;AACzB,KAJU,EAIRF,IAJQ,CAIH,UAASG,IAAT,EAAe;AACrB,UAAIC,UAAU,GAAGD,IAAI,CAACE,EAAtB;AACA,UAAIzB,IAAI,GAAG,IAAIK,IAAJ,EAAX;AACA,UAAIqB,QAAQ,GAAGvB,UAAU,CAACH,IAAD,CAAzB;AAGA2B,MAAAA,OAAO,CAACC,GAAR,CAAYJ,UAAZ,EAAwB,OAAOE,QAA/B;AAEA,aAAOR,KAAK,CAACF,GAAD,CAAZ,CARqB,CAQF;AACpB,KAbU,EAcVI,IAdU,CAcL,UAASC,QAAT,EAAmB;AACvB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KAhBU,EAiBVO,KAjBU,CAiBJ,UAASC,KAAT,EAAgB;AACrBH,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BE,KAA9B;AACD,KAnBU,CAAb;AAqBEb,IAAAA,MAAM,CAACG,IAAP,CAAY,UAASW,CAAT,EAAW;AACnBJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,CAAZ;AACH,KAFD;AAGL;;AACDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAChC,MAAAA,IAAD;AAAOE,MAAAA;AAAP,QAAmB,KAAKH,KAA9B;AACA,wBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAESG,QAAD,GACIF,IAAI,CAACiC,GAAL,CAASC,KAAK,IAAI;AACd,YAAM;AAAElC,QAAAA;AAAF,UAAWkC,KAAjB;AACA,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKlC,IAAL,CADJ,CADJ;AAMH,KARD,CADJ,gBAWQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAbhB,CADJ;AAmBH;;AA1E4B;;AA4EjC,eAAeJ,QAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass TimeHome extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            date: [],\r\n            mymensa: \"\",\r\n            isLoaded: false\r\n        };\r\n    }\r\n\r\n    formatDate(date) {\r\n        var d = new Date(date),\r\n            month = '' + (d.getMonth() + 1),\r\n            day = '' + d.getDate(),\r\n            year = d.getFullYear();\r\n    \r\n        if (month.length < 2) \r\n            month = '0' + month;\r\n        if (day.length < 2) \r\n            day = '0' + day;\r\n    \r\n        return [year, month, day].join('-');\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.setState({ isLoaded: true })\r\n        var url = 'https://openmensa.org/api/v2/canteens/${canteen_id}/days/{day_date}'\r\n        //https://stackoverflow.com/questions/40981040/using-a-fetch-inside-another-fetch-in-javascript\r\n        var result = fetch('/mymensa', {\r\n            method: 'get',\r\n          }).then(function(response) {\r\n            return response.json(); // pass the data as promise to next then block\r\n          }).then(function(data) {\r\n            var canteen_id = data.id;\r\n            var date = new Date()\r\n            var day_date = formatDate(date)\r\n            \r\n        \r\n            console.log(canteen_id, '\\n' + day_date);\r\n          \r\n            return fetch(url); // make a 2nd request and return a promise\r\n          })\r\n          .then(function(response) {\r\n            return response.json();\r\n          })\r\n          .catch(function(error) {\r\n            console.log('Request failed', error)\r\n          })\r\n\r\n          result.then(function(r){\r\n              console.log(r)\r\n          })\r\n    }\r\n    render() {\r\n        const {date, isLoaded} = this.state\r\n        return (\r\n            <React.Fragment>\r\n                {\r\n                    (isLoaded) ?\r\n                        date.map(titel => {\r\n                            const { date } = titel;\r\n                            return (\r\n                                <div>\r\n                                    <h2>{date}</h2>\r\n                                    \r\n                                </div>\r\n                            )\r\n                        }\r\n\r\n                        ) : <p>no test</p>\r\n                }\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\nexport default TimeHome "]},"metadata":{},"sourceType":"module"}