{"ast":null,"code":"var _jsxFileName = \"D:\\\\Final_App_Repo\\\\mensa-app-gruppe-05\\\\client\\\\src\\\\components\\\\likeIcon.js\";\nimport React from 'react';\nimport FavoriteBorderOutlinedIcon from '@material-ui/icons/FavoriteBorderOutlined';\nimport FavoriteOutlinedIcon from '@material-ui/icons/FavoriteOutlined';\nimport IconButton from '@material-ui/core/IconButton';\n\nclass LikeIcon extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isCardView: false,\n      gericht: {}\n    };\n  }\n\n  componentWillMount() {\n    // Simple POST request with a JSON body using fetch\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        title: 'React POST Request Example'\n      })\n    };\n    fetch('https://jsonplaceholder.typicode.com/posts', requestOptions).then(response => response.json()).then(data => this.setState({\n      postId: data.id\n    }));\n  } //  https://stackoverflow.com/questions/41852930/reactjs-how-to-change-an-icon-of-a-button-on-the-click-event\n\n\n  render() {\n    const g = this.props.g;\n    useEffect(() => {\n      // POST request using fetch inside useEffect React hook\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: g\n      };\n      fetch('http://localhost:3000/mygericht', requestOptions).then(response => response.json()).then(data => setPostId(data.id)); // empty dependency array means this effect will only run once (like componentDidMount in classes)\n    }, []);\n    return /*#__PURE__*/React.createElement(IconButton, {\n      key: \"tableModeButton\",\n      onClick: () => {\n        this.setState({\n          isCardView: !this.state.isCardView\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, this.state.isCardView ? /*#__PURE__*/React.createElement(FavoriteOutlinedIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 42\n      }\n    }) : /*#__PURE__*/React.createElement(FavoriteBorderOutlinedIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 69\n      }\n    }));\n  }\n\n}\n\nexport default LikeIcon;","map":{"version":3,"sources":["D:/Final_App_Repo/mensa-app-gruppe-05/client/src/components/likeIcon.js"],"names":["React","FavoriteBorderOutlinedIcon","FavoriteOutlinedIcon","IconButton","LikeIcon","Component","constructor","props","state","isCardView","gericht","componentWillMount","requestOptions","method","headers","body","JSON","stringify","title","fetch","then","response","json","data","setState","postId","id","render","g","useEffect","setPostId"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,0BAAP,MAAuC,2CAAvC;AACA,OAAOC,oBAAP,MAAiC,qCAAjC;AACA,OAAOC,UAAP,MAAuB,8BAAvB;;AAEA,MAAMC,QAAN,SAAuBJ,KAAK,CAACK,SAA7B,CAAuC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE,KADH;AAETC,MAAAA,OAAO,EAAE;AAFA,KAAb;AAIH;;AAEDC,EAAAA,kBAAkB,GAAG;AACjB;AACA,UAAMC,cAAc,GAAG;AACnBC,MAAAA,MAAM,EAAE,MADW;AAEnBC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFU;AAGnBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAf;AAHa,KAAvB;AAKAC,IAAAA,KAAK,CAAC,4CAAD,EAA+CP,cAA/C,CAAL,CACKQ,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,IAAI,IAAI,KAAKC,QAAL,CAAc;AAAEC,MAAAA,MAAM,EAAEF,IAAI,CAACG;AAAf,KAAd,CAFlB;AAGH,GAnBkC,CAyBvC;;;AACIC,EAAAA,MAAM,GAAG;AACL,UAAMC,CAAC,GAAG,KAAKrB,KAAL,CAAWqB,CAArB;AACAC,IAAAA,SAAS,CAAC,MAAM;AACZ;AACA,YAAMjB,cAAc,GAAG;AACnBC,QAAAA,MAAM,EAAE,MADW;AAEnBC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAFU;AAGnBC,QAAAA,IAAI,EAAEa;AAHa,OAAvB;AAKAT,MAAAA,KAAK,CAAC,iCAAD,EAAoCP,cAApC,CAAL,CACKQ,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,IAAI,IAAIO,SAAS,CAACP,IAAI,CAACG,EAAN,CAF3B,EAPY,CAWhB;AACC,KAZQ,EAYN,EAZM,CAAT;AAeA,wBACI,oBAAC,UAAD;AAAY,MAAA,GAAG,EAAC,iBAAhB;AACI,MAAA,OAAO,EAAE,MAAM;AACX,aAAKF,QAAL,CAAc;AACVf,UAAAA,UAAU,EAAE,CAAC,KAAKD,KAAL,CAAWC;AADd,SAAd;AAGH,OALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMK,KAAKD,KAAL,CAAWC,UAAX,gBAAwB,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAxB,gBAAmD,oBAAC,0BAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANxD,CADJ;AASH;;AApDkC;;AAsDvC,eAAeL,QAAf","sourcesContent":["import React from 'react';\r\nimport FavoriteBorderOutlinedIcon from '@material-ui/icons/FavoriteBorderOutlined';\r\nimport FavoriteOutlinedIcon from '@material-ui/icons/FavoriteOutlined';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nclass LikeIcon extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isCardView: false,\r\n            gericht: {}\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        // Simple POST request with a JSON body using fetch\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ title: 'React POST Request Example' })\r\n        };\r\n        fetch('https://jsonplaceholder.typicode.com/posts', requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({ postId: data.id }));\r\n    }\r\n\r\n\r\n\r\n    \r\n\r\n//  https://stackoverflow.com/questions/41852930/reactjs-how-to-change-an-icon-of-a-button-on-the-click-event\r\n    render() {\r\n        const g = this.props.g\r\n        useEffect(() => {\r\n            // POST request using fetch inside useEffect React hook\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: g\r\n            };\r\n            fetch('http://localhost:3000/mygericht', requestOptions)\r\n                .then(response => response.json())\r\n                .then(data => setPostId(data.id));\r\n        \r\n        // empty dependency array means this effect will only run once (like componentDidMount in classes)\r\n        }, []);\r\n        \r\n        \r\n        return (\r\n            <IconButton key=\"tableModeButton\"\r\n                onClick={() => {\r\n                    this.setState({\r\n                        isCardView: !this.state.isCardView\r\n                    })\r\n                }} >\r\n                {this.state.isCardView ? <FavoriteOutlinedIcon /> : <FavoriteBorderOutlinedIcon />}\r\n            </IconButton>)\r\n    }\r\n}\r\nexport default LikeIcon"]},"metadata":{},"sourceType":"module"}