{"ast":null,"code":"var _jsxFileName = \"D:\\\\Final_App_Repo\\\\mensa-app-gruppe-05\\\\client\\\\src\\\\components\\\\likeIcon function way.js\";\nimport React, { useState, useEffect } from 'react';\nimport FavoriteBorderOutlinedIcon from '@material-ui/icons/FavoriteBorderOutlined';\nimport FavoriteOutlinedIcon from '@material-ui/icons/FavoriteOutlined';\nimport IconButton from '@material-ui/core/IconButton';\nexport default function LikeIcon(props) {\n  const [isCardView, setisCardView] = useState(false);\n  const [gericht, setgericht] = useState(NaN);\n  const [readyLiebling, setreadyLiebling] = useState(); //Fetch Lieblingsgerichte\n\n  useEffect(() => {\n    const loadData = async () => {\n      const response = await fetch('/mygericht/');\n      const data = await response.json();\n      console.log(data);\n      setreadyLiebling(data); //console.log(this.state.readyLiebling[2].id + \" testing\")\n    };\n\n    loadData('/mygericht/');\n  }, []);\n\n  const postGericht = async g => {\n    // POST request using fetch with async/await\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(g)\n    };\n    const response = await fetch('/mygericht', requestOptions);\n    const data = await response.json();\n    console.log(data);\n  };\n\n  const isLiebling = () => {\n    const g = props.g;\n    const myLiebling = {\n      readyLiebling\n    }; //console.log(myLiebling[0].id)\n\n    var bool = \"\";\n\n    for (var i = 0; i < myLiebling.length; i++) {\n      if (g.id == myLiebling[i].id) {\n        return /*#__PURE__*/React.createElement(FavoriteBorderOutlinedIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 24\n          }\n        });\n      } else {\n        return /*#__PURE__*/React.createElement(FavoriteBorderOutlinedIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 24\n          }\n        });\n      }\n    }\n\n    return bool;\n  };\n\n  return isLiebling(props.g); //  https://stackoverflow.com/questions/41852930/reactjs-how-to-change-an-icon-of-a-button-on-the-click-event\n\n  /* render() {\r\n      const g = this.props.g\r\n      const myLiebling = this.isLiebling(g);\r\n      /* console.log(this.state.readyLiebling[\"id\"] + \" testing\") */\n\n  /* if(this.state.isCardView){\r\n      postGericht(g)\r\n  } */\n\n  /* if(myLiebling){\r\n      return(\r\n          <IconButton key=\"tableModeButton\" >\r\n          <FavoriteBorderOutlinedIcon />\r\n      </IconButton>\r\n      )\r\n  }else{\r\n      return(\r\n          <IconButton key=\"tableModeButton\"\r\n          onClick={() => {\r\n              this.setState({\r\n                  gericht: g\r\n              })\r\n              this.setState({\r\n                  isCardView: !this.state.isCardView\r\n              })\r\n              if(!this.state.isCardView){\r\n                  postGericht(g)\r\n              }\r\n              \r\n              \r\n          }\r\n            } >\r\n          {this.state.isCardView ? <FavoriteOutlinedIcon /> : <FavoriteBorderOutlinedIcon />}\r\n      </IconButton>\r\n      )\r\n  } \r\n       */\n\n  /* return (\r\n      <IconButton key=\"tableModeButton\"\r\n          onClick={() => {\r\n              this.setState({\r\n                  gericht: g\r\n              })\r\n              this.setState({\r\n                  isCardView: !this.state.isCardView\r\n              })\r\n              if(!this.state.isCardView){\r\n                  postGericht(g)\r\n              }\r\n              \r\n              \r\n          }\r\n            } >\r\n          {this.state.isCardView ? <FavoriteOutlinedIcon /> : <FavoriteBorderOutlinedIcon />}\r\n      </IconButton>) */\n}","map":{"version":3,"sources":["D:/Final_App_Repo/mensa-app-gruppe-05/client/src/components/likeIcon function way.js"],"names":["React","useState","useEffect","FavoriteBorderOutlinedIcon","FavoriteOutlinedIcon","IconButton","LikeIcon","props","isCardView","setisCardView","gericht","setgericht","NaN","readyLiebling","setreadyLiebling","loadData","response","fetch","data","json","console","log","postGericht","g","requestOptions","method","headers","body","JSON","stringify","isLiebling","myLiebling","bool","i","length","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,0BAAP,MAAuC,2CAAvC;AACA,OAAOC,oBAAP,MAAiC,qCAAjC;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAEpC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAACW,GAAD,CAAtC;AACA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCb,QAAQ,EAAlD,CAJoC,CAMpC;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMa,QAAQ,GAAG,YAAY;AACzB,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAD,CAA5B;AACA,YAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAJ,MAAAA,gBAAgB,CAACI,IAAD,CAAhB,CAJyB,CAKzB;AACH,KAND;;AAOAH,IAAAA,QAAQ,CAAC,aAAD,CAAR;AAEH,GAVQ,EAUN,EAVM,CAAT;;AAYA,QAAMO,WAAW,GAAG,MAAOC,CAAP,IAAa;AAC7B;AACA,UAAMC,cAAc,GAAG;AACnBC,MAAAA,MAAM,EAAE,MADW;AAEnBC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFU;AAGnBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,CAAf;AAHa,KAAvB;AAKA,UAAMP,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAD,EAAeO,cAAf,CAA5B;AACA,UAAMN,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACH,GAVD;;AAYA,QAAMY,UAAU,GAAG,MAAM;AACrB,UAAMP,CAAC,GAAGhB,KAAK,CAACgB,CAAhB;AACA,UAAMQ,UAAU,GAAG;AAAClB,MAAAA;AAAD,KAAnB,CAFqB,CAGrB;;AACA,QAAImB,IAAI,GAAG,EAAX;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,UAAU,CAACG,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AAExC,UAAIV,CAAC,CAACY,EAAF,IAAQJ,UAAU,CAACE,CAAD,CAAV,CAAcE,EAA1B,EAA8B;AAC1B,4BAAO,oBAAC,0BAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAGH,OAJD,MAIO;AACH,4BAAO,oBAAC,0BAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEH;AAEJ;;AACD,WAAOH,IAAP;AACH,GAlBD;;AAoBA,SAEGF,UAAU,CAACvB,KAAK,CAACgB,CAAP,CAFb,CAnDoC,CAyDpC;;AACA;;;;;AAIA;;;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;;;;;;;;;;;;;;;;;;AAmBH","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport FavoriteBorderOutlinedIcon from '@material-ui/icons/FavoriteBorderOutlined';\r\nimport FavoriteOutlinedIcon from '@material-ui/icons/FavoriteOutlined';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nexport default function LikeIcon(props) {\r\n\r\n    const [isCardView, setisCardView] = useState(false);\r\n    const [gericht, setgericht] = useState(NaN);\r\n    const [readyLiebling, setreadyLiebling] = useState();\r\n\r\n    //Fetch Lieblingsgerichte\r\n    useEffect(() => {\r\n        const loadData = async () => {\r\n            const response = await fetch('/mygericht/')\r\n            const data = await response.json()\r\n            console.log(data)\r\n            setreadyLiebling(data)\r\n            //console.log(this.state.readyLiebling[2].id + \" testing\")\r\n        };\r\n        loadData('/mygericht/')\r\n\r\n    }, []);\r\n\r\n    const postGericht = async (g) => {\r\n        // POST request using fetch with async/await\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(g)\r\n        };\r\n        const response = await fetch('/mygericht', requestOptions);\r\n        const data = await response.json();\r\n        console.log(data)\r\n    }\r\n\r\n    const isLiebling = () => {\r\n        const g = props.g\r\n        const myLiebling = {readyLiebling}\r\n        //console.log(myLiebling[0].id)\r\n        var bool = \"\"\r\n        for (var i = 0; i < myLiebling.length; i++) {\r\n\r\n            if (g.id == myLiebling[i].id) {\r\n                return <FavoriteBorderOutlinedIcon/>\r\n                \r\n\r\n            } else {\r\n                return <FavoriteBorderOutlinedIcon/>\r\n                \r\n            }\r\n\r\n        }\r\n        return bool;\r\n    }\r\n\r\n    return (\r\n    \r\n       isLiebling(props.g)\r\n\r\n    )\r\n\r\n    //  https://stackoverflow.com/questions/41852930/reactjs-how-to-change-an-icon-of-a-button-on-the-click-event\r\n    /* render() {\r\n        const g = this.props.g\r\n        const myLiebling = this.isLiebling(g);\r\n        /* console.log(this.state.readyLiebling[\"id\"] + \" testing\") */\r\n    /* if(this.state.isCardView){\r\n        postGericht(g)\r\n    } */\r\n    /* if(myLiebling){\r\n        return(\r\n            <IconButton key=\"tableModeButton\" >\r\n            <FavoriteBorderOutlinedIcon />\r\n        </IconButton>\r\n        )\r\n    }else{\r\n        return(\r\n            <IconButton key=\"tableModeButton\"\r\n            onClick={() => {\r\n                this.setState({\r\n                    gericht: g\r\n                })\r\n                this.setState({\r\n                    isCardView: !this.state.isCardView\r\n                })\r\n                if(!this.state.isCardView){\r\n                    postGericht(g)\r\n                }\r\n                \r\n                \r\n            }\r\n\r\n            } >\r\n            {this.state.isCardView ? <FavoriteOutlinedIcon /> : <FavoriteBorderOutlinedIcon />}\r\n        </IconButton>\r\n        )\r\n    } \r\n         */\r\n\r\n    /* return (\r\n        <IconButton key=\"tableModeButton\"\r\n            onClick={() => {\r\n                this.setState({\r\n                    gericht: g\r\n                })\r\n                this.setState({\r\n                    isCardView: !this.state.isCardView\r\n                })\r\n                if(!this.state.isCardView){\r\n                    postGericht(g)\r\n                }\r\n                \r\n                \r\n            }\r\n\r\n            } >\r\n            {this.state.isCardView ? <FavoriteOutlinedIcon /> : <FavoriteBorderOutlinedIcon />}\r\n        </IconButton>) */\r\n}\r\n"]},"metadata":{},"sourceType":"module"}